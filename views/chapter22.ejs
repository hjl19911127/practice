<!DOCTYPE html>
<html>
<head>
	<title><%= title %></title>
	<link rel="stylesheet" href="/highlight/styles/monokai-sublime.css">
	<link rel="stylesheet" href="/stylesheets/style.css">
	<script src='/highlight/highlight.pack.js'></script>
	<script src='/jquery/v1.11.1/jquery.min.js'></script>
</head>
<body>
	<header>
		<h5>第22章 高级技巧</h5>
	</header>
	<main>
		<ol>
			<li>高级函数
				<ul>
					<li>安全的类型检测</li>
					<pre><code>
					// object原生的toString()
					function isArray(value){
						return Object.prototype.toString.call(value) === '[object Array]';
					}
					function isFunction(value){
						return Object.prototype.toString.call(value) === '[object Function]';
					}
					function isRegExp(value){
						return Object.prototype.toString.call(value) === '[object RegExp]';
					}
					</code></pre>
					<li>作用域安全的构造函数</li>
					<pre><code>
					function Person(name, age, job){
						if(this instanceof Person){
							this.name = name;
							this.age = age;
							this.job = job;
						}else{
							return new Person(name, age, job);
						}
					}
					var person1 = Person('Nicholas', 29, 'Software Engineer');
					alert(window.name); //''
					alert(person1.name); //'Nicholas'

					var person2 = new Person('Shelby', 34, 'Ergonomist');
					alert(person2.name);
					</code></pre>
					<pre><code>
					function Polygon(sides){
						if(this instanceof Polygon){
							this.sides = sides;
							this.getArea = function(){
								return 0;
							}
						}else{
							return new Polygon(sides);
						}
						
					}
					function Rectangle(width, height){
						Polygon.call(this, 2);
						this.width = width;
						this.height = height;
						this.getArea = function(){
							return this.width * this.height;
						}
					}
					Rectangle.prototype = new Polygon();  // 保证 Rectangle实例拥有sides属性
					var rect = new Rectangle(5,10);
					console.log(rect.sides); //2
					</code></pre>
					<li>惰性载入函数</li>
					<pre><code class="javascript">
					var createXHR = (function(){
						if(typeof XMLHttpRequest !== 'undefined'){
							return function(){
								return new XMLHttpRequest();
							}
						}else if(typeof ActiveXObject !== 'undefined'){
							return function(){
								if(typeof arguments.callee.activeXString !== 'string'){
									var version = ['MSXML2.XMLHttp.6.0','MSXML2.XMLHttp.3.0','MSXML2.XMLHttp'],
									i, len;
									for(i=0,len=version.length;i&lt;len;i++){
										try{
											new ActiveXObject(version[i]);
											arguments.callee.activeXString = version[i];
										}catch(ex){}
									}
								}
								return new ActiveXObject(arguments.callee.activeXString);
							}
						}else{
							return function(){
								throw new Error('NO XHR object available');
							}
						}
					})();
					</code></pre>
				</ul>
			</li>

		</ol>
	</main>
	<script>
	hljs.initHighlightingOnLoad();

	</script>
</body>
</html>


     